/*
 * @Author: shmao
 * @Date: 2020-10-11 20:48:31
 * @LastEditors: shmao
 * @LastEditTime: 2020-10-11 21:08:56
 */
const arr = [
  'defer,
  'overview,
  'ecosystem,
  'discard,
  'compiler,
  'strategy,
  'carport,
  'principle,
  'boundary,
  'bundles,
  'detected,
  'diagnosis,
  'revert,
  'modified,
  'staged,
  'substr,
  'interceptor,
  'generate,
  'dialog,
  'duplicate,
  'exact,
  'mutation,
  'option,
  'scoped,
  'resolve,
  'indent,
  'execute,
  'directory,
  'residue,
  'query,
  'async,
  'mutate,
  'fallback,
  'expand,
  'commit,
  'flux,
  'application,
  'instance,
  'entire,
  'params,
  'unique,
  'assign,
  'asset,
  'authorizations,
  'slot,
  'pure,
  'temporary,
  'storage,
  'receipts,
  'fragment,
  'identifier,
  'expression,
  'declaration,
  'operator,
  'abstract,
  'polyfill,
  'compile,
  'patch,
  'parse,
  'unnamed,
  'synchronization,
  'portal,
  'composition,
  'variable,
  'constant,
  'addignment,
  'reflect,
  'ecmascript,
  'inferable,
  'iterable,
  'item,
  'hyphenated,
  'tooltip,
  'suspense,
  'teleprot,
  'examination,
  'permanent,
  'community,
  'herbs,
  'reserved,
  'directive,
  'thunk,
  'macrotask',
  'inject',
  'iterator',
  'deactivate',
  'configure',
  'crash',
  'course',
  'resume',
  'dependency',
  'configurable',
  'enumerable',
  'hook',
  'optimize',
  'attached',
  'observe',
  'notify',
  'subscribe',
  'frequently',
  'repositories',
  'execution',
];
arr.forEach((item) => {
  item = `'${item}'`;
});

// arr.sort(function (num1, num2) {
//   if (num1 < num2) {
//     return -1;
//   } else if (num1 == num2) {
//     return 0;
//   } else {
//     return 1;
//   }
// });
console.log(arr.sort());
